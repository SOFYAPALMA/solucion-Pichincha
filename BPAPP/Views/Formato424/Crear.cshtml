@model ProyectoWeb.Models.Form424CrearEncabezado

@{
    ViewBag.Title = "Crear Formulario";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row mt-4">
    <div class="col-sm-12">
        @using (Html.BeginForm())
        {
            <div class="card">
                <div class="card-header">
                    Crear formulario 424 (Depósitos)
                </div>
                <div class="card-body">
                    @Html.AntiForgeryToken()

                    <div class="row">
                        <div class="col-sm-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.idNombreComercial, htmlAttributes: new { @class = "control-label" })
                                <div>
                                    @Html.DropDownList("idNombreComercial", (SelectList)ViewBag.NombreComercial, "Seleccione..", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.idNombreComercial, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.idTipoProductoDeposito, htmlAttributes: new { @class = "control-label" })
                                <div>
                                    @Html.DropDownList("idTipoProductoDeposito", (SelectList)ViewBag.TipodeProductoDeposito, "Seleccione..", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.idTipoProductoDeposito, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.idAperturaDigital, htmlAttributes: new { @class = "control-label" })
                                <div>
                                    @Html.DropDownList("idAperturaDigital", (SelectList)ViewBag.AperturaDeposito, "Seleccione..", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.idAperturaDigital, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.idGrupoPoblacional, htmlAttributes: new { @class = "control-label" })
                                <div>
                                    @Html.DropDownList("idGrupoPoblacional", (SelectList)ViewBag.GrupoPoblacional, "Seleccione..", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.idGrupoPoblacional, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.CuotaManejo, htmlAttributes: new { @class = "control-label" })
                                <div>
                                    @Html.EditorFor(model => model.CuotaManejo, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.CuotaManejo, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.NumeroClientes, htmlAttributes: new { @class = "control-label" })
                                <div>
                                    @Html.EditorFor(model => model.NumeroClientes, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.NumeroClientes, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.idObservacionesCuota, htmlAttributes: new { @class = "control-label" })
                                <div>
                                    @Html.DropDownList("idObservacionesCuota", (SelectList)ViewBag.ObservacionesCuotadeManejo, "Seleccione..", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.idObservacionesCuota, "", new { @class = "text-danger" })

                                </div>
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.idIngresos, htmlAttributes: new { @class = "control-label" })
                                <div>
                                    @Html.DropDownList("idIngresos", (SelectList)ViewBag.Ingresos, "Seleccione..", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.idIngresos, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.idSerGratuito_CtaAHO, htmlAttributes: new { @class = "control-label" })
                                <div>
                                    @Html.DropDownList("idSerGratuito_CtaAHO", (SelectList)ViewBag.ServicioGratuitoCuentadeAhorros, "Seleccione..", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.idSerGratuito_CtaAHO, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.idSerGratuito_CtaAHO2, htmlAttributes: new { @class = "control-label" })
                                <div>
                                    @Html.DropDownList("idSerGratuito_CtaAHO2", (SelectList)ViewBag.ServicioGratuitoCuentadeAhorros, "Seleccione..", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.idSerGratuito_CtaAHO2, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.idSerGratuito_CtaAHO3, htmlAttributes: new { @class = "control-label" })
                                <div>
                                    @Html.DropDownList("idSerGratuito_CtaAHO3", (SelectList)ViewBag.ServicioGratuitoCuentadeAhorros, "Seleccione..", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.idSerGratuito_CtaAHO3, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.idSerGratuito_TCRDebito, htmlAttributes: new { @class = "control-label" })
                                <div>
                                    @Html.DropDownList("idSerGratuito_TCRDebito", (SelectList)ViewBag.ServicioGratuitoTarjetaDebito, "Seleccione..", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.idSerGratuito_TCRDebito, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.idSerGratuito_TCRDebito2, htmlAttributes: new { @class = "control-label" })
                                <div>
                                    @Html.DropDownList("idSerGratuito_TCRDebito2", (SelectList)ViewBag.ServicioGratuitoTarjetaDebito, "Seleccione..", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.idSerGratuito_TCRDebito2, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.idSerGratuito_TCRDebito3, htmlAttributes: new { @class = "control-label" })
                                <div>
                                    @Html.DropDownList("idSerGratuito_TCRDebito3", (SelectList)ViewBag.ServicioGratuitoTarjetaDebito, "Seleccione..", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.idSerGratuito_TCRDebito3, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="card-footer">
                    <div class="row">
                        <div class="col-md-offset-2 col-md-12">
                            <input type="submit" value="Guardar" onclick="return ValidarCuotaManejo()" class="btn btn-primary btn-sm float-right" />
                            <div>
                                @Html.ActionLink("Volver", "List")
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $('#idTipoProductoDeposito').change(function () {
            var value = $("#idTipoProductoDeposito option:selected").val();
            /* console.log(value);*/
            if (value == '6' || value == '7') {
                $('#idAperturaDigital').val("");
                $('#idAperturaDigital').prop("disabled", true);

                $('#NumeroClientes').val("");
                $('#NumeroClientes').prop("disabled", true);

                $('#idGrupoPoblacional').val("");
                $('#idGrupoPoblacional').prop("disabled", true);

                $("#idObservacionesCuota").val("")
                $('#idObservacionesCuota').prop("disabled", true);

                $('#idIngresos').val("");
                $('#idIngresos').prop("disabled", true);

                $('#idSerGratuito_CtaAHO').val("");
                $('#idSerGratuito_CtaAHO').prop("disabled", true);

                $('#idSerGratuito_CtaAHO2').val("");
                $('#idSerGratuito_CtaAHO2').prop("disabled", true);

                $('#idSerGratuito_CtaAHO3').val("");
                $('#idSerGratuito_CtaAHO3').prop("disabled", true);

                $('#idSerGratuito_TCRDebito').val("");
                $('#idSerGratuito_TCRDebito').prop("disabled", true);

                $("#idSerGratuito_TCRDebito2").val("")
                $('#idSerGratuito_TCRDebito2').prop("disabled", true);

                $('#idSerGratuito_TCRDebito3').val("");
                $('#idSerGratuito_TCRDebito3').prop("disabled", true);
            }

            else {
                $('#idAperturaDigital').prop("disabled", false);
                $('#NumeroClientes').prop("disabled", false);
                $('#idGrupoPoblacional').prop("disabled", false);
                $('#idObservacionesCuota').prop("disabled", false);
                $('#idIngresos').prop("disabled", false);
                $('#idSerGratuito_CtaAHO').prop("disabled", false);
                $('#idSerGratuito_CtaAHO2').prop("disabled", false);
                $('#idSerGratuito_CtaAHO3').prop("disabled", false);
                $('#idSerGratuito_TCRDebito').prop("disabled", false);
                $('#idSerGratuito_TCRDebito2').prop("disabled", false);
                $('#idSerGratuito_TCRDebito3').prop("disabled", false);

            }
        });

        $('#CuotaManejo').change(function () {
            ValidarCuotaManejo();
        });
        $('#idObservacionesCuota').change(function () {
            ValidarCuotaManejo();
        });

        $('#idSerGratuito_CtaAHO').change(function () {
            ValidarCuotaManejo();
        });

        $('#idSerGratuito_CtaAHO2').change(function () {
            ValidarCuotaManejo();
        });

        $('#idSerGratuito_CtaAHO3').change(function () {
            ValidarCuotaManejo();
        });
        $('#idSerGratuito_TCRDebito').change(function () {
            ValidarCuotaManejo();
        });

        $('#idSerGratuito_TCRDebito2').change(function () {
            ValidarCuotaManejo();
        });

        $('#idSerGratuito_TCRDebito3').change(function () {
            ValidarCuotaManejo();
        });

        $('#idTipoProductoDeposito').change(function () {
            ValidarCuotaManejo();
        });

        function ValidarCuotaManejo() {
            var retorno = true;
            LimpiarMensajeGeneral();
            var value = $("#CuotaManejo").val();
            var ObsCuota = $("#idObservacionesCuota option:selected").val();

            console.log(value);
            console.log(ObsCuota);

            var SerG1 = $("#idSerGratuito_CtaAHO option:selected").val();
            var SerG2 = $("#idSerGratuito_CtaAHO2 option:selected").val();
            var SerG3 = $("#idSerGratuito_CtaAHO3 option:selected").val();
            var Tdebito1 = $("#idSerGratuito_TCRDebito option:selected").val();
            var Tdebito2 = $("#idSerGratuito_TCRDebito2 option:selected").val();
            var Tdebito3 = $("#idSerGratuito_TCRDebito3 option:selected").val();


            if (ObsCuota == '41') {//Sí NO tiene "Cuota de manejo"
                $('#CuotaManejo').val("");
                $('#CuotaManejo').prop("disabled", true);

                var isValidSG = true;
                var isValidTB = true;

                //Sí No tiene "Cuota de manejo", Valores válidos para "Servicio Gratuito Cuenta de Ahorroso" 98 - No aplica
                //Sí No tiene "Cuota de manejo", Valores válidos para Servicio Gratuito Tarjeta Debito" 98 - No aplica


                if ((Tdebito1 == '62' && Tdebito2 == '62' && Tdebito3 == '62')) {
                    LimpiarMensajeGeneral();
                    retorno = true;
                }
                else {
                    isValidTB = false;
                }

                if (SerG1 == '62' && SerG2 == '62' && SerG3 == '62') {
                    LimpiarMensajeGeneral();
                    retorno = true;
                }
                else {
                    isValidSG = false;
                }

                if (!isValidTB) {
                    retorno = false;
                    MensajeGeneral('Si NO TIENE cuota de manejo puede seleccionar en Servicio Gratuito Tarjeta Debito: <br/>98- No aplica');
                }

                if (!isValidSG) {
                    retorno = false;
                    MensajeGeneral('Si NO TIENE cuota de manejo puede seleccionar en Servicios Gratuitos Cuenta de Ahorro: <br/>98- No aplica');
                }
            }
            else {   //Si TIENE cuota de manejo
                $("#CuotaManejo").prop("disabled", false);
                if (value < 1) {
                    retorno = false;
                    MensajeGeneral('Agregue un valor a la cuota de manejo');
                }
                else {
                    var tipoProdDep = $("#idTipoProductoDeposito option:selected").val();

                    if (tipoProdDep != '6' && tipoProdDep != '7') {
                        console.log('aqui 1');
                        //Sí tiene "Cuota de manejo", Valores válidos para Servicio Gratuito Cuenta de Ahorros: 2 - Consignación nacional, 4 - Copia de extracto en papel, 5 - Certificación bancaria, 6 - Expedición cheque de gerencia
                        if ((SerG1 == '53' || SerG1 == '55' || SerG1 == '56' || SerG1 == '57') && (SerG2 == '53' || SerG2 == '55' || SerG2 == '56' || SerG2 == '57') && (SerG3 == '53' || SerG3 == '55' || SerG3 == '56' || SerG3 == '57')) {
                            console.log('aqui 2');
                            LimpiarMensajeGeneral();
                            retorno = true;
                        }
                        else {
                            console.log('aqui 3');
                            retorno = false;
                            MensajeGeneral('Si TIENE cuota de manejo puede seleccionar en servicios gratuitos cuenta de ahorro: <br/>2 - Consignación nacional <br/>4 - Copia de extracto en papel <br/>5 - Certificación bancaria <br/>6 - Expedición cheque de gerencia');
                        }

                        //Si TIENE cuota de manejo puede seleccionar en Servicio Gratuito Tarjeta Debito: 8 - Consultas en red propia 9 - Certificación bancaria 10 - Copia de extracto en papel y por internet'
                        if ((Tdebito1 == '59' || Tdebito1 == '60' || Tdebito1 == '61') && (Tdebito2 == '59' || Tdebito2 == '60' || Tdebito2 == '61') && (Tdebito3 == '59' || Tdebito3 == '60' || Tdebito3 == '61')) {
                            console.log('aqui 4');
                            retorno = true && retorno;
                        }
                        else {
                            console.log('aqui 5');
                            retorno = false;
                            MensajeGeneral('Si TIENE cuota de manejo puede seleccionar en Servicios Gratuito Tarjeta Debito: <br/>8 - Consultas en red propia <br/>9 - Certificación bancaria <br/>10 - Copia de extracto en papel y por internet');
                        }
                    }
                }
            }
            console.log(retorno);
            return retorno;
        }


    </script>
}
