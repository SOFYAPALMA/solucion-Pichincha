@model ProyectoWeb.Models.Form424ConsultaDetalle

@{
    ViewBag.Title = "Actualizar Detalle";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row mt-4">
    <div class="col-sm-12">
        @using (Html.BeginForm())
        {
            <div class="card">
                <div class="card-header">
                    <h6>Actualizar detalle 424 (Depósitos)</h6>
                </div>
                <div class="card-body">
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(model => model.idPropiedadesFormato)
                    @Html.HiddenFor(model => model.idDetalle)
                    <div class="row">
                        <div class="col-sm-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Subcuenta, htmlAttributes: new { @class = "control-label" })
                                <div class="col-md-10">
                                    @Html.DisplayFor(model => model.Subcuenta, new { htmlAttributes = new { @class = "form-control disabled" } })
                                    @Html.ValidationMessageFor(model => model.Subcuenta, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.idOperacionServicio, htmlAttributes: new { @class = "control-label" })
                                <div class="col-md-10">
                                    @Html.DropDownList("idOperacionServicio", (SelectList)ViewBag.DescripcionOperacionServicio, "Seleccione..", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.idOperacionServicio, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.idCanal, htmlAttributes: new { @class = "control-label" })
                                <div class="col-md-10">
                                    @Html.DropDownList("idCanal", (SelectList)ViewBag.Canal, "Seleccione..", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.idCanal, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.NumOperServiciosCuotamanejo, htmlAttributes: new { @class = "control-label" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.NumOperServiciosCuotamanejo, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.NumOperServiciosCuotamanejo, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.CostoFijo, htmlAttributes: new { @class = "control-label" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.CostoFijo, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.CostoFijo, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.CostoProporcionOperacionServicio, htmlAttributes: new { @class = "control-label" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.CostoProporcionOperacionServicio, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.CostoProporcionOperacionServicio, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.idObservaciones, htmlAttributes: new { @class = "control-label" })
                                <div class="col-md-10">
                                    @Html.DropDownList("idObservaciones", (SelectList)ViewBag.Observaciones, "Seleccione..", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.idObservaciones, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-footer">
                    <div class="row">
                        <div class="col-md-offset-2 col-md-12">
                            @if ((int)ViewBag.Opcion == 2)
                            {
                                <input type="submit" value="Desactivar" class="btn btn-primary btn-sm float-right" />
                            }
                            else
                            {
                                <input type="submit" value="Guardar" class="btn btn-primary btn-sm float-right" />
                            }
                            <div>
                                @Html.ActionLink("Volver", "Details", new { id = Model.idPropiedadesFormato })
                            </div>
                        </div>
                    </div>
                </div>

            </div>

        }
    </div>
</div>




@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $('#idObservaciones').change(function () {
            validacionObs();
        });

        $(document).ready(function () {
            validacionObs();
            validacionNumOp();
            validacionCostoF();
            validacionCostoP();
        });

        function validacionObs() {
            var value = $("#idObservaciones option:selected").val();

            if (value == '90 - Desactivacion') {
                $('#idOperacionServicio').val("");
                $('#idOperacionServicio').prop("disabled", true);

                $('#idCanal').val("");
                $('#idCanal').prop("disabled", true);

                $("#NumOperServiciosCuotamanejo").val('0')
                $('#NumOperServiciosCuotamanejo').prop("disabled", true);

                $('#CostoFijo').val("0");
                $('#CostoFijo').prop("disabled", true);

                $('#CostoProporcionOperacionServicio').val("0");
                $('#CostoProporcionOperacionServicio').prop("disabled", true);
            }
            else if (value == '1 - Costo fijo o proporcional  en dolares') {
                var input = $('#CostoFijo');
                var is_name = input.val();
                //console.log(is_name);

                if (is_name > 0) {
                    input.removeClass("invalid").addClass("valid");
                    $("#NotificacionesGenerales").after('<span class="text-danger field-validation-error"></span>');
                    input.after('<span class="text-danger field-validation-error"></span>');
                }
                else {
                    input.removeClass("valid").addClass("invalid");
                    $("#NotificacionesGenerales").after('<span class="text-danger field-validation-error">El valor del campo costo fijo debe ser mayor a cero.</span>');
                    input.after('<span class="text-danger field-validation-error">El valor del campo costo fijo debe ser mayor a cero.</span>');
                }
            }
            else {
                $('#CostoProporcionOperacionServicio').prop("disabled", false);
                $('#idOperacionServicio').prop("disabled", false);
                $('#idCanal').prop("disabled", false);
                $('#NumOperServiciosCuotamanejo').prop("disabled", false);
                $('#CostoFijo').prop("disabled", false);
            }
        });


        $('#NumOperServiciosCuotamanejo').change(function () {
            function validacionNumOp() {
                var value = $("#NumOperServiciosCuotamanejo").val();
                //console.log(value);
                //console.log($("#NumOperServiciosCuotamanejo"));
                if (value == '-1') {
                    //console.log(value);
                    $('#CostoFijo').val("0");
                    $('#CostoFijo').prop("disabled", true);

                    $('#CostoProporcionOperacionServicio').val("0");
                    $('#CostoProporcionOperacionServicio').prop("disabled", true);
                }
                else {
                    $('#CostoFijo').prop("disabled", false);
                    $('#CostoProporcionOperacionServicio').prop("disabled", false);
                }
            }

        });

        $('#CostoFijo').change(function () {
            function validacionCostoF() {
                var CostoFijo = $("#CostoFijo").val();

                if (CostoFijo != '') {
                    $('#CostoProporcionOperacionServicio').val("0");
                    $('#CostoProporcionOperacionServicio').prop("disabled", true);
                }
                else {
                    $('#CostoProporcionOperacionServicio').prop("disabled", false);
                }
                /*console.log(CostoFijo);*/
            }
        });


        $('#CostoProporcionOperacionServicio').change(function () {
            function validacionCostoP() {
                var CostoProporcionOperacionServicio = $("#CostoProporcionOperacionServicio").val();

                if (CostoProporcionOperacionServicio != '') {
                    $('#CostoFijo').val("0");
                    $('#CostoFijo').prop("disabled", true);
                }
                else {
                    $('#CostoFijo').prop("disabled", false);
                }
                /*console.log(CostoFijo);*/
            }
        });


    </script>
}
