@model ProyectoWeb.Models.Form426CrearDetalle

@{
    ViewBag.Title = "Crear Detalle";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="row mt-4">
    <div class="col-sm-12">
        @using (Html.BeginForm())
        {
            <div class="card">
                <div class="card-header">
                    Crear detalle 426 (Crédito)
                </div>
                <div class="card-body">
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(model => model.idPropiedadesFormato)

                    <div class="row">
                        <div class="col-sm-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Subcuenta, htmlAttributes: new { @class = "control-label" })
                                <div>
                                    @Html.DisplayFor(model => model.Subcuenta, new { htmlAttributes = new { @class = "form-control disabled" } })
                                    @Html.ValidationMessageFor(model => model.Subcuenta, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.idCaracteristicaCredito, htmlAttributes: new { @class = "control-label" })
                                <div>
                                    @Html.DropDownList("idCaracteristicaCredito", (SelectList)ViewBag.CaracteristicaCredito, "Seleccione..", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.idCaracteristicaCredito, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Costo, htmlAttributes: new { @class = "control-label" })
                                <div>
                                    @Html.EditorFor(model => model.Costo, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Costo, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Tasa, htmlAttributes: new { @class = "control-label" })
                                <div>
                                    @Html.EditorFor(model => model.Tasa, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Tasa, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.idTipoAseguradora, htmlAttributes: new { @class = "control-label" })
                                <div>
                                    @Html.DropDownList("idTipoAseguradora", (SelectList)ViewBag.TipoAseguradora, "Seleccione..", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.idTipoAseguradora, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.CodigoAseguradora, htmlAttributes: new { @class = "control-label" })
                                <div>
                                    @Html.DropDownList("idCodigoAseguradora", (SelectList)ViewBag.CodigoAseguradora, "Seleccione..", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.idCodigoAseguradora, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.idObservaciones, htmlAttributes: new { @class = "control-label" })
                                <div>
                                    @Html.DropDownList("idObservaciones", (SelectList)ViewBag.Observaciones, "Seleccione..", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.idObservaciones, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-footer">
                    <div class="row">
                        <div class="col-md-offset-2 col-md-12">
                            <input type="submit" id="btnGuardar" style="visibility:visible;" value="Guardar" class="btn btn-primary btn-sm float-right" />
                            <input type="submit" id="btnDesactivar" style="visibility:hidden;" value="Desactivar" class="btn btn-primary btn-sm float-right" />
                            <div>
                                @Html.ActionLink("Volver", "List")
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>




@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            $("#idTipoAseguradora").change(function () {
                $.get("/Formato425/LlenadoAseguradoras", { tipo: $("#idTipoAseguradora").val() }, function (data) {
                    // VACIAMOS EL DropDownList
                    $("#idCodigoAseguradora").empty();
                    // AÑADIMOS UN NUEVO label CON EL NOMBRE DEL ELEMENTO SELECCIONADO
                    $("#idCodigoAseguradora").append("<option value> Seleccione..</option>")
                    // CONSTRUIMOS EL DropDownList A PARTIR DEL RESULTADO Json (data)
                    $.each(data, function (index, row) {
                        $("#idCodigoAseguradora").append("<option value='" + row.Value + "'>" + row.Text + "</option>")
                    });
                });
            });
        });

        $('#idObservaciones').change(function () {
            var value = $("#idObservaciones option:selected").text();

            if (value == '90 - Desactivacion') {
                //$('#idCaracteristicaCredito').val("");
                //$('#idCaracteristicaCredito').prop("disabled", true);

                $('#Costo').val("0");
                $('#Costo').prop("disabled", true);

                $('#Tasa').val("0");
                $('#Tasa').prop("disabled", true);

                $('#idTipoAseguradora').val("");
                $('#idTipoAseguradora').prop("disabled", true);

                $('#idCodigoAseguradora').val("");
                $('#idCodigoAseguradora').prop("disabled", true);

                $('#btnGuardar').css("visibility", 'hidden');
                $('#btnDesactivar').css("visibility", 'visible');

            }
            else {
                /*$('#idCaracteristicaCredito').prop("disabled", false);*/
                $('#Costo').prop("disabled", false);
                $('#Tasa').prop("disabled", false);
                $('#idTipoAseguradora').prop("disabled", false);
                $('#idCodigoAseguradora').prop("disabled", false);
            }
        });

        $('#idCaracteristicaCredito').change(function () {
            var value = $("#idCaracteristicaCredito option:selected").text();

            if (value == '27 - VTUA porcentual (%)') {

                $('#Costo').val("0");
                $('#Costo').prop("disabled", true);

                //$('#Tasa').val("0");
                //$('#Tasa').prop("disabled", true);

                $('#idTipoAseguradora').val("");
                $('#idTipoAseguradora').prop("disabled", true);

                $('#idCodigoAseguradora').val("");
                $('#idCodigoAseguradora').prop("disabled", true);

                $('#idObservaciones').val("");
                $('#idObservaciones').prop("disabled", true);

            }
            else {

                $('#Costo').prop("disabled", false);
                /* $('#Tasa').prop("disabled", false);*/
                $('#idTipoAseguradora').prop("disabled", false);
                $('#idCodigoAseguradora').prop("disabled", false);
                $('#idObservaciones').prop("disabled", false);
            }
        });

        $('#idCaracteristicaCredito').change(function () {
            var value = $("#idCaracteristicaCredito option:selected").text();

            /* console.log('{' + value + '}');*/

            //if (value == '27 - VTUA porcentual (%)') {
            //    /*  console.log('27');*/
            //    $('#idObservaciones').val("");
            //    $('#idObservaciones').prop("disabled", false);
            //}
            //else esta regla se cambia de acuerdo a nuevo correo

            if (value == '28 - Tasa de interes EA') {
                /* console.log('28');*/
                $('#idObservaciones').val("");
                $('#idObservaciones').prop("disabled", false);
            }
            else if (value == '37 - Cobro prejuridico ') {
                /*   console.log('37');*/
                $('#idObservaciones').val("");
                $('#idObservaciones').prop("disabled", false);
            }
            else if (value == '38 - Cobro juridico ') {
                $('#idObservaciones').val("");
                $('#idObservaciones').prop("disabled", false);
            }
            else {
                $('#idObservaciones').prop("disabled", true);
            }
        });

        $('#Costo').change(function () {
            var Costo = $("#Costo").val();

            if (Costo != '') {
                $('#Tasa').val("0");
                $('#Tasa').prop("disabled", true);

            }
            else {

                $('#Tasa').prop("disabled", false);
                $('#TasaMaxima').prop("disabled", false);

            }
            /*console.log(CostoFijo);*/
        });

        $('#Tasa').change(function () {
            var Tasa = $("#Tasa").val();

            if (Tasa != '') {
                $('#Costo').val("0");
                $('#Costo').prop("disabled", true);

            }
            else {

                $('#Tasa').prop("disabled", false);
                $('#Costo').prop("disabled", false);

            }
            /*console.log(CostoFijo);*/
        });

    </script>
}
